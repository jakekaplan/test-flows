# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: test-flows
prefect-version: 3.1.15

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push: null

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    id: clone-step
    repository: https://github.com/jakekaplan/test-flows.git
    branch: main
- prefect.deployments.steps.run_shell_script:
    script: pip install uv
- prefect.deployments.steps.run_shell_script:
    directory: '{{ clone-step.directory }}'
    script: uv sync --python-preference only-system --no-editable
- prefect.deployments.steps.run_shell_script:
    script: python -c "import test_flows; import inspect; print(inspect.getfile(test_flows)); print(dir(test_flows));"
- prefect.deployments.steps.run_shell_script:
    script: pip freeze
- prefect.deployments.steps.run_shell_script:
    script: ls

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: test-flows-deploy
  version: null
  tags: []
  concurrency_limit: null
  description: null
  entrypoint: test_flows.my_flow:my_flow
  parameters: {}
  work_pool:
    name: my-modal-pool
    work_queue_name: null
    job_variables: {"env": {"UV_PROJECT_ENVIRONMENT": "/usr/local"}}
  schedules: []
